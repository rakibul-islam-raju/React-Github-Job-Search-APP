{"version":3,"sources":["components/Job.jsx","components/JobsPagination.jsx","components/SearchJob.jsx","hooks/useFetchJobs.js","App.js","reportWebVitals.js","index.js"],"names":["Job","job","useState","open","setOpen","className","title","company","type","location","children","how_to_apply","onClick","prevOpen","description","Date","created_at","toLocaleDateString","height","src","company_logo","alt","JobsPagination","page","setPage","hasNextPage","adjustPage","amount","prevPage","prevPageMarkup","aria-label","aria-hidden","nextPageMarkup","SearchJob","params","onParamChange","onChange","value","name","placeholder","htmlFor","full_time","id","ACTIONS","BASE_URL","reducer","state","action","loading","jobs","payload","error","useFetchJobs","useReducer","dispatch","useEffect","cancleToken1","axios","CancelToken","source","cancleToken2","get","cancleToken","token","markdown","then","res","data","catch","e","isCancel","length","cancel","App","setParams","role","param","target","prevParams","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.546498d7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nfunction Job({ job }) {\n    const [open, setOpen] = useState(false);\n    return (\n        <div>\n            <div className=\"col-lg-8\">\n                <div className=\"card mb-4\">\n                    <div className=\"card-body\">\n                        <div className=\"d-flex justify-content-between\">\n                            <div className=\"\">\n                                <div className=\"d-flex\">\n                                    <h4 className=\"card-title\">{job.title}</h4>\n                                </div>\n                                Company:{' '}\n                                <span className=\"text-muted font-weight-light\">{job.company}</span>\n                                <div className=\"\">\n                                    <span className=\"badge bg-primary text-white mr-2\">\n                                        {job.type}\n                                    </span>\n                                    <span className=\"badge bg-secondary text-white\">\n                                        {job.location}\n                                    </span>\n                                </div>\n                                <ReactMarkdown className=\"mt-2\" children={job.how_to_apply} />\n                                <div className=\"details\">\n                                    <button\n                                        onClick={() => setOpen((prevOpen) => !prevOpen)}\n                                        type=\"button\"\n                                        className=\"btn btn-primary\"\n                                    >\n                                        {open ? 'Hide Details' : 'View Details'}\n                                    </button>\n                                    {open && (\n                                        <ReactMarkdown\n                                            className=\"mt-2\"\n                                            children={job.description}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                            <div className=\"\">\n                                <h6 className=\"card-subtitle mb-2 text-muted\">\n                                    Date: {new Date(job.created_at).toLocaleDateString()}\n                                </h6>\n                                <img\n                                    className=\"d-none d-md-block\"\n                                    height=\"50\"\n                                    src={job.company_logo}\n                                    alt={job.company}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Job;\n","import React from 'react';\n\nfunction JobsPagination({ page, setPage, hasNextPage }) {\n    function adjustPage(amount) {\n        setPage((prevPage) => prevPage + amount);\n    }\n\n    const prevPageMarkup = (\n        <li className=\"page-item\">\n            <button\n                type=\"button\"\n                onClick={() => adjustPage(-1)}\n                className=\"page-link\"\n                aria-label=\"Previous\"\n            >\n                <span aria-hidden=\"true\">&laquo;</span>\n            </button>\n        </li>\n    );\n\n    const nextPageMarkup = (\n        <li className=\"page-item\">\n            <button\n                onClick={() => adjustPage(1)}\n                type=\"button\"\n                className=\"page-link\"\n                aria-label=\"Next\"\n            >\n                <span aria-hidden=\"true\">&raquo;</span>\n            </button>\n        </li>\n    );\n\n    return (\n        <div>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    {/* previous page */}\n                    {page > 1 && prevPageMarkup}\n                    {page > 1 && (\n                        <li className=\"page-item\">\n                            <button\n                                onClick={() => adjustPage(-1)}\n                                className=\"page-link\"\n                                type=\"button\"\n                            >\n                                {page - 1}\n                            </button>\n                        </li>\n                    )}\n                    {/* current page */}\n                    <li className=\"page-item active\">\n                        <button className=\"page-link\" type=\"button\">\n                            {page}\n                        </button>\n                    </li>\n                    {hasNextPage && (\n                        <li className=\"page-item\">\n                            <button\n                                onClick={() => adjustPage(1)}\n                                className=\"page-link\"\n                                type=\"button\"\n                            >\n                                {page + 1}\n                            </button>\n                        </li>\n                    )}\n                    {hasNextPage && nextPageMarkup}\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default JobsPagination;\n","import React from 'react';\n\nfunction SearchJob({ params, onParamChange }) {\n    return (\n        <div>\n            <div className=\"form mb-4\">\n                <div className=\"row\">\n                    <div className=\"col-md-5\">\n                        <input\n                            onChange={onParamChange}\n                            value={params.description}\n                            name=\"description\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Description\"\n                        />\n                    </div>\n                    <div className=\"col-md-5\">\n                        <input\n                            onChange={onParamChange}\n                            value={params.location}\n                            name=\"location\"\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Location\"\n                        />\n                    </div>\n                    <div className=\"col mt-1\">\n                        <label className=\"form-check-label\" htmlFor=\"full_time\">\n                            <input\n                                onChange={onParamChange}\n                                value={params.full_time}\n                                name=\"full_time\"\n                                type=\"checkbox\"\n                                className=\"form-check-input\"\n                                id=\"full_time\"\n                            />\n                            Only Full Time\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchJob;\n","import axios from 'axios';\nimport { useEffect, useReducer } from 'react';\n\nconst ACTIONS = {\n    MAKE_REQUEST: 'make-request',\n    GET_DATA: 'get-data',\n    ERROR: 'error',\n    UPDATE_HAS_NEXT_PAGE: 'update-has-next-page',\n};\n\n// const BASE_URL = 'https://jobs.github.com/positions.json';\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json';\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case ACTIONS.MAKE_REQUEST:\n            return { loading: true, jobs: [] };\n        case ACTIONS.GET_DATA:\n            return { ...state, loading: false, jobs: action.payload.jobs };\n        case ACTIONS.ERROR:\n            return { ...state, loading: false, error: action.payload.error, jobs: [] };\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\n            return { ...state, hasNextPage: action.payload.hasNextPage };\n        default:\n            return state;\n    }\n}\n\nfunction useFetchJobs(params, page) {\n    const [state, dispatch] = useReducer(reducer, { jobs: {}, loading: true });\n\n    useEffect(() => {\n        const cancleToken1 = axios.CancelToken.source();\n        const cancleToken2 = axios.CancelToken.source();\n\n        dispatch({ type: ACTIONS.MAKE_REQUEST });\n        // fetching Data\n        axios\n            .get(BASE_URL, {\n                cancleToken: cancleToken1.token,\n                params: { markdown: true, page, ...params },\n            })\n            .then((res) => {\n                dispatch({ type: ACTIONS.GET_DATA, payload: { jobs: res.data } });\n            })\n            .catch((e) => {\n                if (axios.isCancel(e)) return;\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n            });\n        // checking for next page\n        axios\n            .get(BASE_URL, {\n                cancleToken: cancleToken2.token,\n                params: { markdown: true, page: page + 1, ...params },\n            })\n            .then((res) => {\n                dispatch({\n                    type: ACTIONS.UPDATE_HAS_NEXT_PAGE,\n                    payload: { hasNextPage: res.data.length !== 0 },\n                });\n            })\n            .catch((e) => {\n                if (axios.isCancel(e)) return;\n                dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n            });\n\n        return () => {\n            cancleToken1.cancel();\n            cancleToken2.cancel();\n        };\n    }, [params, page]);\n\n    return state;\n}\n\nexport default useFetchJobs;\n","import { useState } from 'react';\nimport Job from './components/Job';\nimport JobsPagination from './components/JobsPagination';\nimport SearchJob from './components/SearchJob';\nimport useFetchJobs from './hooks/useFetchJobs';\n\nfunction App() {\n    const [params, setParams] = useState({});\n    const [page, setPage] = useState(1);\n\n    const { jobs, loading, error, hasNextPage } = useFetchJobs(params, page);\n\n    function handleParamChange(e) {\n        const param = e.target.name;\n        const { value } = e.target;\n        setPage(1);\n        // eslint-disable-next-line no-unused-vars\n        setParams((prevParams) => ({ ...params, [param]: value }));\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <h2 className=\"py-2\">Github Jobs</h2>\n\n                {error && (\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        Error. Something went wrong. Please try again.\n                        <br />\n                    </div>\n                )}\n\n                {/* Serch form */}\n                {jobs.length > 0 ? (\n                    <SearchJob params={params} onParamChange={handleParamChange} />\n                ) : null}\n\n                {/* pagination */}\n                {jobs.length > 0 ? (\n                    <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n                ) : null}\n\n                {/* Loding markup */}\n                {loading === true ? (\n                    <div className=\"text-center\">\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                            <span className=\"visually-hidden\" />\n                        </div>\n                    </div>\n                ) : null}\n\n                {/* Job list */}\n                <div className=\"\">\n                    {jobs.length > 0 ? jobs.map((job) => <Job key={job.id} job={job} />) : null}\n                </div>\n                {jobs.length > 0 ? (\n                    <JobsPagination page={page} setPage={setPage} hasNextPage={hasNextPage} />\n                ) : null}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}